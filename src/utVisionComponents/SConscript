import sys
import glob
import os.path

# import variables from other scons files
Import( '*' )
env = masterEnv.Clone()

env.AppendUnique( **mergeOptions( utdataflow_all_options, utvision_all_options ) )
env.AppendUnique( **utcomponents_options )
env.AppendUnique( **glut_options )

env.AppendUnique( LIBS = boost_libs( [ 'thread' ] ) )

# create component libraries
comp_sources = globSourceFiles( '*.cpp' )

if not have_lapack:
	for src in [ "MarkerTracker.cpp", "CameraProjectionMatrix.cpp", "ReorderGrid.cpp" ]:
		comp_sources.remove( src );
		
if not have_utcomponents:
	for src in [ "ImageTrigger.cpp", "FrameBuffer.cpp", "ImageGate.cpp", "FrameSampler.cpp" ]:
		comp_sources.remove( src );

if not have_glut:
	for src in [ "TextureUpdate.cpp" ]:
		comp_sources.remove( src );
		
# setup environment
env.AppendUnique( **mergeOptions( utvision_options, opencv_options, lapack_options ) )
env.AppendUnique( LIBS = boost_libs( [ 'thread' ] ) )
env.Replace( no_import_lib = 1 )


# compile components as shared libraries
setupComponentBuild(env, comp_sources, 'visioncomponents')

sources = globSourceFiles( '*.cpp' )
headers = globSourceFiles( '*.h' )
createVisualStudioProject(env, sources, headers, 'utVision-Components')