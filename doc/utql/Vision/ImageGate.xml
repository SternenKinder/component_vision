<?xml version="1.0" encoding="UTF-8"?>

<UTQLPatternTemplates xmlns='http://ar.in.tum.de/ubitrack/utql'
                      xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
                      xmlns:xi='http://www.w3.org/2001/XInclude'
                      xmlns:h="http://www.w3.org/1999/xhtml"
                      xsi:schemaLocation='http://ar.in.tum.de/ubitrack/utql ../../schema/utql_templates.xsd'>    
    
    <Pattern name="ImageGate" displayName="Gate (Image)">
    	<Description><h:p>The gate component has a data input and a signal input. For each signal event, the gate
    	lets exactly one data event pass. The <h:code>gateType</h:code> attribute is used to configure if
    	the previous or the next event is passed.</h:p></Description>
    	
        <Input>
            <Node name="A" displayName="A"/>
            <Node name="B" displayName="B"/>
            <Node name="Event" displayName="Event"/>
            <Node name="EventSpace" displayName="Event Space"/>
            <Edge name="Input" source="A" destination="B" displayName="Data Input">
            	<Description><h:p>The input image</h:p></Description>
                <Predicate>type=='Image'&amp;&amp;mode=='push'</Predicate>
            </Edge>
            <Edge name="Signal" source="Event" destination="EventSpace" displayName="Trigger Input">
            	<Description><h:p>The trigger input signal</h:p></Description>
                <Predicate>type=='Button'&amp;&amp;mode=='push'</Predicate>
            </Edge>
        </Input>
        
        <Output>
            <Edge name="Output" source="A" destination="B" displayName="Gated Matrix">
            	<Description><h:p>The gated image</h:p></Description>
                <Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="ImageGate"/>
            <Attribute name="button" xsi:type="StringAttributeReferenceType"/>
            <Attribute name="gateType" xsi:type="EnumAttributeReferenceType"/>
        </DataflowConfiguration>
    </Pattern>


    <!-- Attribute declarations -->
    
    <GlobalNodeAttributeDeclarations>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/1/1)"/>
    </GlobalNodeAttributeDeclarations>
    
    <GlobalEdgeAttributeDeclarations>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/1)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/2)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/3)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/4)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/5)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/6)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/7)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/8)"/>
    </GlobalEdgeAttributeDeclarations> 

    <GlobalDataflowAttributeDeclarations>
        <!-- Unfortunately, the xpointer used in Xinclude is currently restricted to the element scheme and absolute element indices in Xerces (and thus XMLBeans) -->
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/1)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/2)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/3)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/4)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/5)"/>

        <Attribute name="gateType" displayName="Gate type" default="0" xsi:type="EnumAttributeDeclarationType">
            <Description>
                <h:p>If this attribute is either
                    <h:code>Immediate</h:code> or
                    <h:code>Immediate (Sync)</h:code>, the gate will immediately send the last data event when a signal event is
            	received. In the latter case, the measurement pushed on 
                    <h:code>Output</h:code> has the timestamp associated
                with 
                    <h:code>Signal</h:code>, otherwise it has the timestamp associated with 
                    <h:code>Input</h:code>. If this attribute is set to
                    <h:code>Wait</h:code>, the component will push the next incoming data event.
                </h:p>
            </Description>
            <EnumValue name="1" displayName="Wait"/>
            <EnumValue name="2" displayName="Immediate (Sync)"/>
            <EnumValue name="0" displayName="Immediate"/>
        </Attribute>
    </GlobalDataflowAttributeDeclarations>
</UTQLPatternTemplates>
